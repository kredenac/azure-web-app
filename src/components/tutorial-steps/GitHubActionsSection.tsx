export const GitHubActionsSection = () => {
  return (
    <div className="space-y-6">
      <h2 className="text-3xl font-bold text-gray-900">Automatic deployment on git push</h2>
      <p className="text-gray-700">
        After completing the manual deployment setup from the previous step, you can automate deployment via CI/CD using
        GitHub Actions.
      </p>

      <div className="bg-blue-50 border-l-4 border-blue-400 p-4">
        <h3 className="font-semibold text-blue-900 mb-3">Setting up GitHub Actions in Azure</h3>
        <p className="text-blue-800 mb-3">
          Go to Azure portal for your web app and configure GitHub deployment as shown in this image:
        </p>
        <div className="mb-3">
          <img
            src="/github_cd.png"
            alt="Azure Web App GitHub Actions Configuration"
            className="border border-gray-300 rounded-lg shadow-sm max-w-full h-auto"
          />
        </div>
        <p className="text-blue-800 text-sm">
          This will automatically commit a YAML file into{' '}
          <code className="bg-blue-100 px-2 py-1 rounded">.github/workflows</code> in your repository.
        </p>
      </div>

      <div className="bg-orange-50 border-l-4 border-orange-400 p-4">
        <h3 className="font-semibold text-orange-900">Default YAML Issues</h3>
        <p className="mt-2 text-orange-800">
          The default YAML file generated by Azure has significant issues for free-tier users:
        </p>
        <ul className="mt-2 text-orange-800 space-y-1">
          <li>• Unnecessarily uploads and downloads artifacts between build and deploy steps (making it slower)</li>
          <li>• Quickly consumes GitHub's free tier storage quota (500MB)</li>
          <li>• Splits build and deploy into separate jobs when they can be combined</li>
        </ul>
        <p className="mt-3 text-orange-800 font-semibold">
          Replace the generated YAML with the optimized version below:
        </p>
      </div>

      <div className="bg-gray-900 text-gray-100 p-4 rounded-lg">
        <h3 className="font-semibold mb-3">.github/workflows/deploy-webapp.yml</h3>
        <pre className="text-green-400 overflow-x-auto text-sm">
          {`name: Build and deploy unified Node.js app to Azure Web App

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Login to Azure
        uses: azure/login@v2 #v2 is correct but linter is wrong
        with:
          client-id: \${{ secrets.AZUREAPPSERVICE_CLIENTID_5FB39170F5F5497D838E451B12A90262 }}
          tenant-id: \${{ secrets.AZUREAPPSERVICE_TENANTID_710BCEE4FB9940259FD9F28CFBB2E8A6 }}
          subscription-id: \${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_C1E1054924B1418EBDFF248CA73BE36A }}

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3 #v3 is correct but linter is wrong
        id: deploy-to-webapp
        with:
          app-name: 'web-app-guide'
          slot-name: 'Production'
          package: .
`}
        </pre>
      </div>

      <div className="bg-green-50 border-l-4 border-green-400 p-4">
        <h3 className="font-semibold text-green-900">Required Modifications to the template above:</h3>
        <ul className="mt-2 text-green-800 space-y-2">
          <li>
            • <strong>Update app-name:</strong> Change <code>'web-app-guide'</code> to your actual Azure Web App name
          </li>
          <li>
            • <strong>Copy authentication secret ids from your file:</strong> The <code>client-id</code>,{' '}
            <code>tenant-id</code>, and <code>subscription-id</code> values will be automatically generated as secrets
            in your repository
          </li>
        </ul>
      </div>
    </div>
  );
};
